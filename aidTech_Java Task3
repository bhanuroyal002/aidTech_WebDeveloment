package aidInfo;

import java.io.Serializable;

public class Student implements Serializable {
    private String name;
    private int rollNumber;
    private String address;
    private String phoneNumber;

    public Student(String name, int rollNumber, String address, String phoneNumber) {
        this.name = name;
        this.rollNumber = rollNumber;
        this.address = address;
        this.phoneNumber = phoneNumber;
    }

    public String getName() {
        return name;
    }

    public int getRollNumber() {
        return rollNumber;
    }

    public String getAddress() {
        return address;
    }

    public String getPhoneNumber() {
        return phoneNumber;
    }

    @Override
    public String toString() {
        return "Name: " + name + ", Roll Number: " + rollNumber +
                ", Address: " + address + ", Phone Number: " + phoneNumber;
    }
}



package aidInfo;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class StudentRecord implements Serializable {
    private List<Student> students;

    public StudentRecord() {
        students = new ArrayList<>();
    }

    public void addStudent(Student student) {
        students.add(student);
    }

    public void removeStudent(Student student) {
        students.remove(student);
    }

    public Student getStudentByRollNumber(int rollNumber) {
        for (Student student : students) {
            if (student.getRollNumber() == rollNumber) {
                return student;
            }
        }
        return null;
    }

    public List<Student> getStudents() {
        return students;
    }

    public void saveToFile(String fileName) throws IOException {
        FileOutputStream fileOutputStream = new FileOutputStream(fileName);
        ObjectOutputStream objectOutputStream = new ObjectOutputStream(fileOutputStream);
        objectOutputStream.writeObject(this);
        objectOutputStream.close();
        fileOutputStream.close();
    }

    public static StudentRecord loadFromFile(String fileName) throws IOException, ClassNotFoundException {
        FileInputStream fileInputStream = new FileInputStream(fileName);
        ObjectInputStream objectInputStream = new ObjectInputStream(fileInputStream);
        StudentRecord studentRecord = (StudentRecord) objectInputStream.readObject();
        objectInputStream.close();
        fileInputStream.close();
        return studentRecord;
    }
}




package aidInfo;

import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.util.*;
import javax.swing.*;

public class StudentRecordGUI extends JFrame {

    private static final long serialVersionUID = 1L;

    private JLabel nameLabel, rollNumberLabel, addressLabel, phoneNumberLabel, searchLabel;
    private JTextField nameTextField, rollNumberTextField, addressTextField, phoneNumberTextField, searchTextField;
    private JButton addButton, removeButton, searchButton, clearButton, saveButton, loadButton;
    private JTextArea displayArea;
    private JScrollPane scrollPane;
    private StudentRecord studentRecord;


    public StudentRecordGUI() {
        super("Student Record Management System");

        nameLabel = new JLabel("Name:");
        rollNumberLabel = new JLabel("Roll Number:");
        addressLabel = new JLabel("Address:");
        phoneNumberLabel = new JLabel("Phone Number:");
        searchLabel = new JLabel("Search by Name or Roll Number:");

        nameTextField = new JTextField(20);
        rollNumberTextField = new JTextField(10);
        addressTextField = new JTextField(50);
        phoneNumberTextField = new JTextField(15);
        searchTextField = new JTextField(30);

        addButton = new JButton("Add");
        removeButton = new JButton("Remove");
        searchButton = new JButton("Search");
        clearButton = new JButton("Clear");
        saveButton = new JButton("Save");
        loadButton = new JButton("Load");

        displayArea = new JTextArea(20, 60);
        displayArea.setEditable(false);
        scrollPane = new JScrollPane(displayArea);

        JPanel inputPanel = new JPanel(new GridBagLayout());
        GridBagConstraints constraints = new GridBagConstraints();
        constraints.anchor = GridBagConstraints.WEST;
        constraints.insets = new Insets(5, 5, 5, 5);

        constraints.gridx = 0;
        constraints.gridy = 0;
        inputPanel.add(nameLabel, constraints);

        constraints.gridx = 1;
        inputPanel.add(nameTextField, constraints);

        constraints.gridx = 0;
        constraints.gridy = 1;
        inputPanel.add(rollNumberLabel, constraints);

        constraints.gridx = 1;
        inputPanel.add(rollNumberTextField, constraints);

        constraints.gridx = 0;
        constraints.gridy = 2;
        inputPanel.add(addressLabel, constraints);

        constraints.gridx = 1;
        inputPanel.add(addressTextField, constraints);

        constraints.gridx = 0;
        constraints.gridy = 3;
        inputPanel.add(phoneNumberLabel, constraints);

        constraints.gridx = 1;
        inputPanel.add(phoneNumberTextField, constraints);

        constraints.gridx = 0;
        constraints.gridy = 4;
        inputPanel.add(searchLabel, constraints);

        constraints.gridx = 1;
        inputPanel.add(searchTextField, constraints);

        constraints.gridx = 2;
        constraints.gridy = 0;
        inputPanel.add(addButton, constraints);

        constraints.gridy = 1;
        inputPanel.add(removeButton, constraints);

        constraints.gridy = 2;
        inputPanel.add(searchButton, constraints);

        constraints.gridy = 3;
        inputPanel.add(clearButton, constraints);

        constraints.gridy = 4;
        inputPanel.add(saveButton, constraints);

        constraints.gridy = 5;
        inputPanel.add(loadButton, constraints);

        JPanel displayPanel = new JPanel();
        displayPanel.add(scrollPane);

        Container container = getContentPane();
        container.add(inputPanel, BorderLayout.NORTH);
        container.add(displayPanel, BorderLayout.CENTER);
        addButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent event) {
                addAction();
            }
        });
    }

        private void addAction() {
            String name = nameTextField.getText();
            int rollNumber = Integer.parseInt(rollNumberTextField.getText());
            String address = addressTextField.getText();
            String phoneNumber = phoneNumberTextField.getText();

            Student student = new Student(name, rollNumber, address, phoneNumber);

            studentRecord.addStudent(student);
        }
    }
        


